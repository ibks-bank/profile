// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: api/profile/profile.proto

package profile

import (
	context "context"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{0}
}

func (x *SignInRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignInRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SignUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string    `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string    `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Passport *Passport `protobuf:"bytes,3,opt,name=passport,proto3" json:"passport,omitempty"`
}

func (x *SignUpRequest) Reset() {
	*x = SignUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest) ProtoMessage() {}

func (x *SignUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest.ProtoReflect.Descriptor instead.
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{1}
}

func (x *SignUpRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignUpRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignUpRequest) GetPassport() *Passport {
	if x != nil {
		return x.Passport
	}
	return nil
}

type SignUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *SignUpResponse) Reset() {
	*x = SignUpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpResponse) ProtoMessage() {}

func (x *SignUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpResponse.ProtoReflect.Descriptor instead.
func (*SignUpResponse) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{2}
}

func (x *SignUpResponse) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type Passport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Series     string                 `protobuf:"bytes,1,opt,name=series,proto3" json:"series,omitempty"`
	Number     string                 `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	FirstName  string                 `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	MiddleName string                 `protobuf:"bytes,4,opt,name=middleName,proto3" json:"middleName,omitempty"`
	LastName   string                 `protobuf:"bytes,5,opt,name=lastName,proto3" json:"lastName,omitempty"`
	IssuedBy   string                 `protobuf:"bytes,6,opt,name=issuedBy,proto3" json:"issuedBy,omitempty"`
	IssuedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=issuedAt,proto3" json:"issuedAt,omitempty"`
	Address    string                 `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	Birthplace string                 `protobuf:"bytes,9,opt,name=birthplace,proto3" json:"birthplace,omitempty"`
	Birthdate  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
}

func (x *Passport) Reset() {
	*x = Passport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Passport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Passport) ProtoMessage() {}

func (x *Passport) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Passport.ProtoReflect.Descriptor instead.
func (*Passport) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{3}
}

func (x *Passport) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *Passport) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Passport) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Passport) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *Passport) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Passport) GetIssuedBy() string {
	if x != nil {
		return x.IssuedBy
	}
	return ""
}

func (x *Passport) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *Passport) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Passport) GetBirthplace() string {
	if x != nil {
		return x.Birthplace
	}
	return ""
}

func (x *Passport) GetBirthdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthdate
	}
	return nil
}

type SubmitCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SubmitCodeRequest) Reset() {
	*x = SubmitCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCodeRequest) ProtoMessage() {}

func (x *SubmitCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCodeRequest.ProtoReflect.Descriptor instead.
func (*SubmitCodeRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitCodeRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SubmitCodeRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SubmitCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SubmitCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SubmitCodeResponse) Reset() {
	*x = SubmitCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCodeResponse) ProtoMessage() {}

func (x *SubmitCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCodeResponse.ProtoReflect.Descriptor instead.
func (*SubmitCodeResponse) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitCodeResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SetAuthenticationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	UserID int64  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *SetAuthenticationCodeRequest) Reset() {
	*x = SetAuthenticationCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAuthenticationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAuthenticationCodeRequest) ProtoMessage() {}

func (x *SetAuthenticationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAuthenticationCodeRequest.ProtoReflect.Descriptor instead.
func (*SetAuthenticationCodeRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{6}
}

func (x *SetAuthenticationCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SetAuthenticationCodeRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type SetTelegramUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TgUsername string `protobuf:"bytes,1,opt,name=tgUsername,proto3" json:"tgUsername,omitempty"`
}

func (x *SetTelegramUsernameRequest) Reset() {
	*x = SetTelegramUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTelegramUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTelegramUsernameRequest) ProtoMessage() {}

func (x *SetTelegramUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTelegramUsernameRequest.ProtoReflect.Descriptor instead.
func (*SetTelegramUsernameRequest) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{7}
}

func (x *SetTelegramUsernameRequest) GetTgUsername() string {
	if x != nil {
		return x.TgUsername
	}
	return ""
}

type GetTelegramUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TgUsername string `protobuf:"bytes,1,opt,name=tgUsername,proto3" json:"tgUsername,omitempty"`
}

func (x *GetTelegramUsernameResponse) Reset() {
	*x = GetTelegramUsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_profile_profile_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelegramUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelegramUsernameResponse) ProtoMessage() {}

func (x *GetTelegramUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_profile_profile_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelegramUsernameResponse.ProtoReflect.Descriptor instead.
func (*GetTelegramUsernameResponse) Descriptor() ([]byte, []int) {
	return file_api_profile_profile_proto_rawDescGZIP(), []int{8}
}

func (x *GetTelegramUsernameResponse) GetTgUsername() string {
	if x != nil {
		return x.TgUsername
	}
	return ""
}

var File_api_profile_profile_proto protoreflect.FileDescriptor

var file_api_profile_profile_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x73, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x53,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xdc, 0x02, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x42, 0x79, 0x12, 0x36, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x2a, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4a, 0x0a, 0x1c, 0x53,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x67, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x67, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x67, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa1, 0x0d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0xd9, 0x02, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x9b,
	0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x2d, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0xfc, 0x01,
	0x12, 0x1c, 0xd0, 0x90, 0xd0, 0xb2, 0xd1, 0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb7,
	0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0xd1, 0x81, 0xd1, 0x8f, 0x1a, 0xdb,
	0x01, 0xd0, 0x9d, 0xd0, 0xb5, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0,
	0xb8, 0xd0, 0xbc, 0xd0, 0xbe, 0x20, 0xd0, 0xb2, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82,
	0xd0, 0xb8, 0x20, 0xd0, 0xbb, 0xd0, 0xbe, 0xd0, 0xb3, 0xd0, 0xb8, 0xd0, 0xbd, 0x20, 0xd0, 0xb8,
	0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0x2e, 0x20, 0xd0,
	0x97, 0xd0, 0xb0, 0xd0, 0xbf, 0xd1, 0x83, 0xd1, 0x81, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1,
	0x82, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0xd1, 0x86, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x81,
	0x20, 0xd0, 0xb4, 0xd0, 0xb2, 0xd1, 0x83, 0xd1, 0x85, 0xd1, 0x84, 0xd0, 0xb0, 0xd0, 0xba, 0xd1,
	0x82, 0xd0, 0xbe, 0xd1, 0x80, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb9, 0x20, 0xd0, 0xb0, 0xd1, 0x83,
	0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba,
	0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x20, 0x28, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8,
	0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xb3, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0,
	0xba, 0xd0, 0xb5, 0x20, 0x78, 0x2d, 0x75, 0x73, 0x65, 0x2d, 0x6d, 0x6f, 0x63, 0x6b, 0x3d, 0x74,
	0x72, 0x75, 0x65, 0x20, 0xd0, 0xbd, 0xd0, 0xb5, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xbf, 0xd1,
	0x83, 0xd1, 0x81, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x29, 0x12, 0x9d, 0x01, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2f, 0x73, 0x69, 0x67, 0x6e, 0x2d, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3e, 0x12, 0x1d,
	0xd0, 0xa1, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0,
	0xb0, 0xd0, 0xba, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x83, 0xd0, 0xbd, 0xd1, 0x82, 0x1a, 0x1d, 0xd0,
	0xa1, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb4, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xb0,
	0xd0, 0xba, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x83, 0xd0, 0xbd, 0xd1, 0x82, 0x12, 0xfc, 0x01, 0x0a,
	0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x8b, 0x01,
	0x12, 0x25, 0xd0, 0x92, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb8, 0x20, 0xd0,
	0xba, 0xd0, 0xbe, 0xd0, 0xb4, 0x20, 0xd0, 0xb8, 0xd0, 0xb7, 0x20, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1,
	0x81, 0xd1, 0x8c, 0xd0, 0xbc, 0xd0, 0xb0, 0x1a, 0x62, 0xd0, 0x9d, 0xd0, 0xb5, 0xd0, 0xbe, 0xd0,
	0xb1, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xbe, 0x20, 0xd0, 0xb2,
	0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb8, 0x20, 0xd0, 0xba, 0xd0, 0xbe, 0xd0,
	0xb4, 0x20, 0xd0, 0xb8, 0xd0, 0xb7, 0x20, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd1, 0x8c, 0xd0,
	0xbc, 0xd0, 0xb0, 0x2e, 0x20, 0xd0, 0x9e, 0xd1, 0x82, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1,
	0x82, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb5, 0xd0, 0xbd, 0x20, 0xd0, 0xb4, 0xd0,
	0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xb0, 0x12, 0x96, 0x01, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x59, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x92,
	0x41, 0x42, 0x12, 0x1f, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb8,
	0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd1, 0x81, 0xd0, 0xbf, 0xd0, 0xbe, 0xd1,
	0x80, 0xd1, 0x82, 0x1a, 0x1f, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0,
	0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd1, 0x81, 0xd0, 0xbf, 0xd0, 0xbe,
	0xd1, 0x80, 0xd1, 0x82, 0x12, 0xa3, 0x02, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0xc7, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x61, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x74, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0xa5, 0x01, 0x0a, 0x02, 0x51, 0x41, 0x12, 0x40, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0,
	0xbb, 0xd0, 0xbe, 0xd0, 0xb6, 0xd0, 0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xba, 0xd0, 0xbe,
	0xd0, 0xb4, 0x20, 0xd0, 0xb0, 0xd1, 0x83, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0,
	0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x20,
	0xd0, 0xb2, 0x20, 0xd0, 0xb1, 0xd0, 0xb0, 0xd0, 0xb7, 0xd1, 0x83, 0x1a, 0x5d, 0xd0, 0x9d, 0xd0,
	0xb5, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0,
	0xbe, 0x20, 0xd0, 0xb4, 0xd0, 0xbb, 0xd1, 0x8f, 0x20, 0xd0, 0xb0, 0xd0, 0xb2, 0xd1, 0x82, 0xd0,
	0xbe, 0xd1, 0x82, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0x28, 0xd1,
	0x87, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x8b, 0x20, 0xd0, 0xbd, 0xd0, 0xb5, 0x20, 0xd0,
	0xb7, 0xd0, 0xb0, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x8c, 0x20,
	0xd0, 0xbe, 0xd1, 0x82, 0x20, 0x73, 0x6d, 0x74, 0x70, 0x29, 0x12, 0x8e, 0x02, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0xb6, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x65, 0x74, 0x2d, 0x74, 0x67, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x94, 0x01, 0x12, 0x46, 0xd0, 0xa1, 0xd0, 0xb2, 0xd1, 0x8f, 0xd0,
	0xb7, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0xd1, 0x84,
	0xd0, 0xb8, 0xd0, 0xbb, 0xd1, 0x8c, 0x20, 0xd1, 0x81, 0x20, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb,
	0xd0, 0xb5, 0xd0, 0xb3, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xbc, 0x20, 0xd0, 0xb0, 0xd0,
	0xba, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x83, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xbc, 0x1a,
	0x4a, 0xd0, 0xa1, 0xd0, 0xb2, 0xd1, 0x8f, 0xd0, 0xb7, 0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xb0, 0xd0,
	0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xbe, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xbb,
	0xd1, 0x8c, 0x20, 0xd1, 0x81, 0x20, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb3,
	0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xbc, 0x20, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xba, 0xd0,
	0xb0, 0xd1, 0x83, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xbc, 0x12, 0xca, 0x01, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x67, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x92, 0x41, 0x58,
	0x12, 0x2a, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb8, 0xd1, 0x82,
	0xd1, 0x8c, 0x20, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb3, 0xd1, 0x80, 0xd0,
	0xb0, 0xd0, 0xbc, 0xd0, 0xbc, 0x20, 0xd0, 0xb8, 0xd0, 0xbc, 0xd1, 0x8f, 0x1a, 0x2a, 0xd0, 0x9f,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd1,
	0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb3, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0,
	0xbc, 0x20, 0xd0, 0xb8, 0xd0, 0xbc, 0xd1, 0x8f, 0x42, 0x12, 0x5a, 0x10, 0x2f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x3b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_profile_profile_proto_rawDescOnce sync.Once
	file_api_profile_profile_proto_rawDescData = file_api_profile_profile_proto_rawDesc
)

func file_api_profile_profile_proto_rawDescGZIP() []byte {
	file_api_profile_profile_proto_rawDescOnce.Do(func() {
		file_api_profile_profile_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_profile_profile_proto_rawDescData)
	})
	return file_api_profile_profile_proto_rawDescData
}

var file_api_profile_profile_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_profile_profile_proto_goTypes = []interface{}{
	(*SignInRequest)(nil),                // 0: profile_pb.SignInRequest
	(*SignUpRequest)(nil),                // 1: profile_pb.SignUpRequest
	(*SignUpResponse)(nil),               // 2: profile_pb.SignUpResponse
	(*Passport)(nil),                     // 3: profile_pb.Passport
	(*SubmitCodeRequest)(nil),            // 4: profile_pb.SubmitCodeRequest
	(*SubmitCodeResponse)(nil),           // 5: profile_pb.SubmitCodeResponse
	(*SetAuthenticationCodeRequest)(nil), // 6: profile_pb.SetAuthenticationCodeRequest
	(*SetTelegramUsernameRequest)(nil),   // 7: profile_pb.SetTelegramUsernameRequest
	(*GetTelegramUsernameResponse)(nil),  // 8: profile_pb.GetTelegramUsernameResponse
	(*timestamppb.Timestamp)(nil),        // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 10: google.protobuf.Empty
}
var file_api_profile_profile_proto_depIdxs = []int32{
	3,  // 0: profile_pb.SignUpRequest.passport:type_name -> profile_pb.Passport
	9,  // 1: profile_pb.Passport.issuedAt:type_name -> google.protobuf.Timestamp
	9,  // 2: profile_pb.Passport.birthdate:type_name -> google.protobuf.Timestamp
	0,  // 3: profile_pb.Profile.SignIn:input_type -> profile_pb.SignInRequest
	1,  // 4: profile_pb.Profile.SignUp:input_type -> profile_pb.SignUpRequest
	4,  // 5: profile_pb.Profile.SubmitCode:input_type -> profile_pb.SubmitCodeRequest
	10, // 6: profile_pb.Profile.GetPassport:input_type -> google.protobuf.Empty
	6,  // 7: profile_pb.Profile.SetAuthenticationCode:input_type -> profile_pb.SetAuthenticationCodeRequest
	7,  // 8: profile_pb.Profile.SetTelegramUsername:input_type -> profile_pb.SetTelegramUsernameRequest
	10, // 9: profile_pb.Profile.GetTelegramUsername:input_type -> google.protobuf.Empty
	10, // 10: profile_pb.Profile.SignIn:output_type -> google.protobuf.Empty
	2,  // 11: profile_pb.Profile.SignUp:output_type -> profile_pb.SignUpResponse
	5,  // 12: profile_pb.Profile.SubmitCode:output_type -> profile_pb.SubmitCodeResponse
	3,  // 13: profile_pb.Profile.GetPassport:output_type -> profile_pb.Passport
	10, // 14: profile_pb.Profile.SetAuthenticationCode:output_type -> google.protobuf.Empty
	10, // 15: profile_pb.Profile.SetTelegramUsername:output_type -> google.protobuf.Empty
	8,  // 16: profile_pb.Profile.GetTelegramUsername:output_type -> profile_pb.GetTelegramUsernameResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_profile_profile_proto_init() }
func file_api_profile_profile_proto_init() {
	if File_api_profile_profile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_profile_profile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Passport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAuthenticationCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTelegramUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_profile_profile_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelegramUsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_profile_profile_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_profile_profile_proto_goTypes,
		DependencyIndexes: file_api_profile_profile_proto_depIdxs,
		MessageInfos:      file_api_profile_profile_proto_msgTypes,
	}.Build()
	File_api_profile_profile_proto = out.File
	file_api_profile_profile_proto_rawDesc = nil
	file_api_profile_profile_proto_goTypes = nil
	file_api_profile_profile_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProfileClient is the client API for Profile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProfileClient interface {
	SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error)
	SubmitCode(ctx context.Context, in *SubmitCodeRequest, opts ...grpc.CallOption) (*SubmitCodeResponse, error)
	GetPassport(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Passport, error)
	SetAuthenticationCode(ctx context.Context, in *SetAuthenticationCodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SetTelegramUsername(ctx context.Context, in *SetTelegramUsernameRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	GetTelegramUsername(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTelegramUsernameResponse, error)
}

type profileClient struct {
	cc grpc.ClientConnInterface
}

func NewProfileClient(cc grpc.ClientConnInterface) ProfileClient {
	return &profileClient{cc}
}

func (c *profileClient) SignIn(ctx context.Context, in *SignInRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/SignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error) {
	out := new(SignUpResponse)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) SubmitCode(ctx context.Context, in *SubmitCodeRequest, opts ...grpc.CallOption) (*SubmitCodeResponse, error) {
	out := new(SubmitCodeResponse)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/SubmitCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) GetPassport(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Passport, error) {
	out := new(Passport)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/GetPassport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) SetAuthenticationCode(ctx context.Context, in *SetAuthenticationCodeRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/SetAuthenticationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) SetTelegramUsername(ctx context.Context, in *SetTelegramUsernameRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/SetTelegramUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) GetTelegramUsername(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetTelegramUsernameResponse, error) {
	out := new(GetTelegramUsernameResponse)
	err := c.cc.Invoke(ctx, "/profile_pb.Profile/GetTelegramUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfileServer is the server API for Profile service.
type ProfileServer interface {
	SignIn(context.Context, *SignInRequest) (*emptypb.Empty, error)
	SignUp(context.Context, *SignUpRequest) (*SignUpResponse, error)
	SubmitCode(context.Context, *SubmitCodeRequest) (*SubmitCodeResponse, error)
	GetPassport(context.Context, *emptypb.Empty) (*Passport, error)
	SetAuthenticationCode(context.Context, *SetAuthenticationCodeRequest) (*emptypb.Empty, error)
	SetTelegramUsername(context.Context, *SetTelegramUsernameRequest) (*emptypb.Empty, error)
	GetTelegramUsername(context.Context, *emptypb.Empty) (*GetTelegramUsernameResponse, error)
}

// UnimplementedProfileServer can be embedded to have forward compatible implementations.
type UnimplementedProfileServer struct {
}

func (*UnimplementedProfileServer) SignIn(context.Context, *SignInRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignIn not implemented")
}
func (*UnimplementedProfileServer) SignUp(context.Context, *SignUpRequest) (*SignUpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (*UnimplementedProfileServer) SubmitCode(context.Context, *SubmitCodeRequest) (*SubmitCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitCode not implemented")
}
func (*UnimplementedProfileServer) GetPassport(context.Context, *emptypb.Empty) (*Passport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPassport not implemented")
}
func (*UnimplementedProfileServer) SetAuthenticationCode(context.Context, *SetAuthenticationCodeRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAuthenticationCode not implemented")
}
func (*UnimplementedProfileServer) SetTelegramUsername(context.Context, *SetTelegramUsernameRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTelegramUsername not implemented")
}
func (*UnimplementedProfileServer) GetTelegramUsername(context.Context, *emptypb.Empty) (*GetTelegramUsernameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTelegramUsername not implemented")
}

func RegisterProfileServer(s *grpc.Server, srv ProfileServer) {
	s.RegisterService(&_Profile_serviceDesc, srv)
}

func _Profile_SignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).SignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/SignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).SignIn(ctx, req.(*SignInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_SubmitCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).SubmitCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/SubmitCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).SubmitCode(ctx, req.(*SubmitCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_GetPassport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).GetPassport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/GetPassport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).GetPassport(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_SetAuthenticationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAuthenticationCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).SetAuthenticationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/SetAuthenticationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).SetAuthenticationCode(ctx, req.(*SetAuthenticationCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_SetTelegramUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTelegramUsernameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).SetTelegramUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/SetTelegramUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).SetTelegramUsername(ctx, req.(*SetTelegramUsernameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_GetTelegramUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).GetTelegramUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile_pb.Profile/GetTelegramUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).GetTelegramUsername(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Profile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "profile_pb.Profile",
	HandlerType: (*ProfileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignIn",
			Handler:    _Profile_SignIn_Handler,
		},
		{
			MethodName: "SignUp",
			Handler:    _Profile_SignUp_Handler,
		},
		{
			MethodName: "SubmitCode",
			Handler:    _Profile_SubmitCode_Handler,
		},
		{
			MethodName: "GetPassport",
			Handler:    _Profile_GetPassport_Handler,
		},
		{
			MethodName: "SetAuthenticationCode",
			Handler:    _Profile_SetAuthenticationCode_Handler,
		},
		{
			MethodName: "SetTelegramUsername",
			Handler:    _Profile_SetTelegramUsername_Handler,
		},
		{
			MethodName: "GetTelegramUsername",
			Handler:    _Profile_GetTelegramUsername_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/profile/profile.proto",
}
